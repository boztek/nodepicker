<?php
// $Id: nodepicker.module,v 1.1 2010/03/08 12:08:53 blixxxa Exp $

/**
 * @file
 *  Module hooks for Node picker.
 */

/**
 * Implementation of hook_menu().
 */
function nodepicker_menu() {
  $items = array();
  
  $items['admin/settings/nodepicker'] = array(
  	'title' => 'Node picker',
  	'description' => 'Settings for the Node picker module.',
  	'page callback' => 'drupal_get_form',
    'page arguments' => array('nodepicker_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'nodepicker.admin.inc',
    'file path' => drupal_get_path('module', 'nodepicker'),
  );
  
  $items['nodepicker/%'] = array(
    'title' => 'Node picker',
    'page callback' => 'nodepicker_page',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'nodepicker.page.inc',
  );
  
  return $items;
}

/**
 * Implementation of hook_init().
 */
function nodepicker_init() {
  $settings = array(
    'basepath' => base_path(),
    'filepath' => file_directory_path(),
    'modulepath' => drupal_get_path('module', 'nodepicker'),
  );

  drupal_add_js(array('nodepicker' => $settings), "setting");
}

/**
 * Implementation of hook_theme().
 */
function nodepicker_theme() {
  $path = drupal_get_path('module', 'nodepicker') .'/theme';
  
  $theme['nodepicker_page'] = array(
    'template' => 'nodepicker-page',
    'path' => $path,
    'arguments' => array('styles' => NULL, 'messages' => NULL, 'content' => NULL, 'scripts' => NULL),
  );
  
  $theme['nodepicker_nodes'] = array(
    'template' => 'nodepicker-nodes',
    'path' => $path,
    'arguments' => array(),
  );
  
   $theme['nodepicker_menu'] = array(
    'template' => 'nodepicker-menu',
    'path' => $path,
    'arguments' => array(),
  );
  
   $theme['nodepicker_taxonomy'] = array(
    'template' => 'nodepicker-taxonomy',
    'path' => $path,
    'arguments' => array(),
  );

  return $theme;
}

/**
 * Template preprocess function for theme_nodepicker_page().
 */
function template_preprocess_nodepicker_page(&$variables) {
  $variables['base_path'] = base_path();
  $variables['language'] = $GLOBALS['language'];
  $variables['language']->dir = $GLOBALS['language']->direction ? 'rtl' : 'ltr';
}

/**
 * Template preprocess function for theme_nodepicker_nodes().
 */
function template_preprocess_nodepicker_nodes(&$variables) {
  // Get view.
  $view = views_get_view('nodepicker_nodes');
  $view->set_display('default');
  
  $settings = array(
    'views' => array(
      'ajax_path' => url('views/ajax'),
      'ajaxViews' => array(
        array(
          'view_name' => $view->name,
          'view_display_id' => $view->current_display,
          'view_path' => $_GET['q'],
          'view_dom_id' => 1,
          'pager_element' => $view->pager['element'],
        ),
      ),
    ),
  );
  drupal_add_js($settings, 'setting');
  
  // Set content.
  $variables['content'] = $view->execute_display('default');
}

/**
 * Template preprocess function for theme_nodepicker_menu().
 */
function template_preprocess_nodepicker_menu(&$variables) {
  $variables['content'] = 'Menu';
}

/**
 * Template preprocess function for theme_nodepicker_taxonomy().
 */
function template_preprocess_nodepicker_taxonomy(&$variables) {
  // Get view.
  $view = views_get_view('nodepicker_taxonomy');
  $view->set_display('default');
  
  $settings = array(
    'views' => array(
      'ajax_path' => url('views/ajax'),
      'ajaxViews' => array(
        array(
          'view_name' => $view->name,
          'view_display_id' => $view->current_display,
          'view_path' => $_GET['q'],
          'view_dom_id' => 1,
          'pager_element' => $view->pager['element'],
        ),
      ),
    ),
  );
  drupal_add_js($settings, 'setting');
  
  // Set content.
  $variables['content'] = $view->execute_display('default');
}

/**
 * Implementation of hook_views_api().
 */
function nodepicker_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'nodepicker') .'/includes',
  );
}

/**
 * Implementation of hook_wysiwyg_include_directory().
 */
function nodepicker_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      return $type;
  }
}